// Code generated by ent, DO NOT EDIT.

package shipmentstatuscode

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/thaiha1607/foursquare_server/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldLTE(FieldID, id))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldEQ(FieldUpdatedAt, v))
}

// ShipmentStatus applies equality check predicate on the "shipment_status" field. It's identical to ShipmentStatusEQ.
func ShipmentStatus(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldEQ(FieldShipmentStatus, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldLTE(FieldUpdatedAt, v))
}

// ShipmentStatusEQ applies the EQ predicate on the "shipment_status" field.
func ShipmentStatusEQ(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldEQ(FieldShipmentStatus, v))
}

// ShipmentStatusNEQ applies the NEQ predicate on the "shipment_status" field.
func ShipmentStatusNEQ(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldNEQ(FieldShipmentStatus, v))
}

// ShipmentStatusIn applies the In predicate on the "shipment_status" field.
func ShipmentStatusIn(vs ...string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldIn(FieldShipmentStatus, vs...))
}

// ShipmentStatusNotIn applies the NotIn predicate on the "shipment_status" field.
func ShipmentStatusNotIn(vs ...string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldNotIn(FieldShipmentStatus, vs...))
}

// ShipmentStatusGT applies the GT predicate on the "shipment_status" field.
func ShipmentStatusGT(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldGT(FieldShipmentStatus, v))
}

// ShipmentStatusGTE applies the GTE predicate on the "shipment_status" field.
func ShipmentStatusGTE(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldGTE(FieldShipmentStatus, v))
}

// ShipmentStatusLT applies the LT predicate on the "shipment_status" field.
func ShipmentStatusLT(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldLT(FieldShipmentStatus, v))
}

// ShipmentStatusLTE applies the LTE predicate on the "shipment_status" field.
func ShipmentStatusLTE(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldLTE(FieldShipmentStatus, v))
}

// ShipmentStatusContains applies the Contains predicate on the "shipment_status" field.
func ShipmentStatusContains(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldContains(FieldShipmentStatus, v))
}

// ShipmentStatusHasPrefix applies the HasPrefix predicate on the "shipment_status" field.
func ShipmentStatusHasPrefix(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldHasPrefix(FieldShipmentStatus, v))
}

// ShipmentStatusHasSuffix applies the HasSuffix predicate on the "shipment_status" field.
func ShipmentStatusHasSuffix(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldHasSuffix(FieldShipmentStatus, v))
}

// ShipmentStatusEqualFold applies the EqualFold predicate on the "shipment_status" field.
func ShipmentStatusEqualFold(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldEqualFold(FieldShipmentStatus, v))
}

// ShipmentStatusContainsFold applies the ContainsFold predicate on the "shipment_status" field.
func ShipmentStatusContainsFold(v string) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.FieldContainsFold(FieldShipmentStatus, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ShipmentStatusCode) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ShipmentStatusCode) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ShipmentStatusCode) predicate.ShipmentStatusCode {
	return predicate.ShipmentStatusCode(sql.NotPredicates(p))
}
