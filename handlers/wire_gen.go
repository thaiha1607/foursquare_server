// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package handlers

import (
	"github.com/labstack/echo/v4"
	"github.com/thaiha1607/foursquare_server/ent"
	"github.com/thaiha1607/foursquare_server/handlers/http"
	"github.com/thaiha1607/foursquare_server/repositories"
	"github.com/thaiha1607/foursquare_server/services"
)

// Injectors from wire.go:

func initializeOrderHandler(e *echo.Echo, db *ent.Client) error {
	orderRepository := repositories.NewEntOrderRepository(db)
	orderService := services.NewOrderService(orderRepository)
	error2 := http.NewOrderHandler(e, orderService)
	return error2
}

func initializeOrderStatusCodeHandler(e *echo.Echo, db *ent.Client) error {
	orderStatusCodeRepository := repositories.NewEntOrderStatusCodeRepository(db)
	orderStatusCodeService := services.NewOrderStatusCodeService(orderStatusCodeRepository)
	error2 := http.NewOrderStatusCodeHandler(e, orderStatusCodeService)
	return error2
}

func initializeProductImageHandler(e *echo.Echo, db *ent.Client) error {
	productImageRepository := repositories.NewEntProductImageRepository(db)
	productImageService := services.NewProductImageService(productImageRepository)
	error2 := http.NewProductImageHandler(e, productImageService)
	return error2
}

func initializeOrderItemHandler(e *echo.Echo, db *ent.Client) error {
	orderItemRepository := repositories.NewEntOrderItemRepository(db)
	orderItemService := services.NewOrderItemService(orderItemRepository)
	error2 := http.NewOrderItemHandler(e, orderItemService)
	return error2
}

func initializePersonHandler(e *echo.Echo, db *ent.Client) error {
	personRepository := repositories.NewEntPersonRepository(db)
	personService := services.NewPersonService(personRepository)
	error2 := http.NewPersonHandler(e, personService)
	return error2
}

func initializeProductTagHandler(e *echo.Echo, db *ent.Client) error {
	productTagRepository := repositories.NewEntProductTagRepository(db)
	productTagService := services.NewProductTagService(productTagRepository)
	error2 := http.NewProductTagHandler(e, productTagService)
	return error2
}

func initializeMessageHandler(e *echo.Echo, db *ent.Client) error {
	messageRepository := repositories.NewEntMessageRepository(db)
	messageService := services.NewMessageService(messageRepository)
	error2 := http.NewMessageHandler(e, messageService)
	return error2
}

func initializeTagHandler(e *echo.Echo, db *ent.Client) error {
	tagRepository := repositories.NewEntTagRepository(db)
	tagService := services.NewTagService(tagRepository)
	error2 := http.NewTagHandler(e, tagService)
	return error2
}

func initializeInvoiceHandler(e *echo.Echo, db *ent.Client) error {
	invoiceRepository := repositories.NewEntInvoiceRepository(db)
	invoiceService := services.NewInvoiceService(invoiceRepository)
	error2 := http.NewInvoiceHandler(e, invoiceService)
	return error2
}

func initializeConversationHandler(e *echo.Echo, db *ent.Client) error {
	conversationRepository := repositories.NewEntConversationRepository(db)
	conversationService := services.NewConversationService(conversationRepository)
	error2 := http.NewConversationHandler(e, conversationService)
	return error2
}
